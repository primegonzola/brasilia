{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectName": {
            "type": "string"
        },
        "apiVersions": {
            "type": "object"
        },
        "uniqueNameFix": {
            "type": "string"
        },
        "subnetId": {
            "type": "string"
        },
        "adminUserName": {
            "type": "securestring",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password on all VMs."
            }
        },
        "bootstrapStorageAccountSas": {
            "type": "securestring"
        },
        "omsWorkspaceId": {
            "type": "string"
        },
        "omsWorkspaceKey": {
            "type": "string"
        },
        "storageAccountId": {
            "type": "string"
        },
        "imageUri": {
            "type": "string"
        }
    },
    "variables": {
        "apiVersions": "[parameters('apiVersions')]",
        "uniqueNameFix": "[parameters('uniqueNameFix')]",
        "vmName": "[concat('frontend-vm-', variables('uniqueNameFix'))]",
        "ipName": "[concat('frontend-ip-', variables('uniqueNameFix'))]",
        "dnsName": "[concat('frontend-dns-', variables('uniqueNameFix'))]",
        "nicName": "[concat('frontend-nic-', variables('uniqueNameFix'))]",
        "nsgName": "[concat('frontend-nsg-', variables('uniqueNameFix'))]",
        "dskName": "[concat('frontend-dsk-', variables('uniqueNameFix'))]",
        "imgName": "[concat('frontend-img-', variables('uniqueNameFix'))]",
        "subnetId": "[parameters('subnetId')]",
        "singleQuote": "'",
        "imgUri": "[parameters('imageUri')]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/images",
            "apiVersion": "[variables('apiVersions').images]",
            "name": "[variables('imgName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "storageProfile": {
                    "osDisk": {
                        "osType": "Linux",
                        "osState": "Generalized",
                        "blobUri": "[variables('imgUri')]",
                        "caching": "ReadWrite",
                        "storageAccountType": "Standard_LRS"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "apiVersion": "[variables('apiVersions').virtualMachines]",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_F1"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[resourceId('Microsoft.Compute/images', variables('imgName'))]"
                    },
                    "osDisk": {
                        "name": "[variables('dskName')]",
                        "createOption": "FromImage"
                    }
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/images/', variables('imgName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),'/','extensions')]",
            "apiVersion": "[variables('apiVersions').virtualMachinesExtensions]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(uri(deployment().properties.templateLink.uri, 'frontend-init.sh'), parameters('bootstrapStorageAccountSas'))]",
                        "[concat(uri(deployment().properties.templateLink.uri, 'frontend.tar.gz'), parameters('bootstrapStorageAccountSas'))]",
                        "https://raw.githubusercontent.com/Microsoft/OMS-Agent-for-Linux/master/installer/scripts/onboard_agent.sh"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('./frontend-init.sh',' ', variables('singleQuote'), parameters('projectName'), variables('singleQuote'),' ', variables('singleQuote'), parameters('omsWorkspaceId'), variables('singleQuote'),' ', variables('singleQuote'), parameters('omsWorkspaceKey'), variables('singleQuote'),' ', variables('singleQuote'), parameters('storageAccountId'), variables('singleQuote'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('apiVersions').networkInterfaces]",
            "name": "[variables('nicName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                },
                "virtualMachine": {
                    "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('apiVersions').networkSecurityGroups]",
            "name": "[variables('nsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "[variables('apiVersions').publicIPAddresses]",
            "name": "[variables('ipName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "[variables('apiVersions').networkSecurityGroups]",
            "name": "[concat(variables('nsgName'), '/default_allow_http_name')]",
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ]
        }
    ],
    "outputs": {}
}